<queries><query type="SQL" format="list" dictname="labels" defaultsortorder="outletname"> SELECT JSON(ContactName(c.prefix,c.firstname,c.middlename,c.familyname,c.suffix)) as contactname,JSON(CASE WHEN o.outlettypeid=19 THEN '''' WHEN o.prmax_outlettypeid in (50,51,52,53,54,55,56,57,58,59,60,61,62) THEN '''' ELSE o.outletname END)as outletname, CASE WHEN oca.address1 IS NULL THEN oa.address1 ELSE oca.address1 END as address1, CASE WHEN oca.address1 IS NULL THEN oa.address2 ELSE oca.address2 END as address2, CASE WHEN oca.address1 IS NULL THEN getTown(oa.townname,oa.postcode) ELSE getTown(oca.townname,oca.postcode) END as townname, CASE WHEN oca.address1 IS NULL THEN oa.county ELSE oca.county END as county, CASE WHEN oca.address1 IS NULL THEN oa.postcode ELSE oca.postcode END as postcode FROM userdata.searchsession as s JOIN outlets as o on o.outletid = s.outletid LEFT OUTER JOIN outletcustomers as oc ON oc.outletid = o.outletid AND oc.customerid = s.customerid JOIN employees as e on COALESCE(s.employeeid,oc.primaryemployeeid,o.primaryemployeeid)= e.employeeid LEFT OUTER JOIN communications as o_c ON o.communicationid = o_c.communicationid LEFT OUTER JOIN communications as oc_c ON oc_c.communicationid = oc.communicationid LEFT OUTER JOIN addresses as oa ON oa.addressid = o_c.addressid LEFT OUTER JOIN addresses as oca ON oa.addressid = oc_c.addressid JOIN contacts as c on e.contactid = c.contactid LEFT OUTER JOIN internal.prmax_outlettypes AS pr ON pr.prmax_outlettypeid = o.prmax_outlettypeid WHERE s.userid = %(userid)s and s.searchtypeid= %(searchtypeid)s AND SELECTION(s.selected, %(selector)s)=true ORDER BY outletname </query></queries>

