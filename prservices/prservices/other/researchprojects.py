# -*- coding: utf-8 -*-
""""""
#-----------------------------------------------------------------------------
# Name:        researchprojects.py
# Purpose:     
#
# Author:      Stamatia Vatsi
#
# Created:     12/02/2019
# Copyright:  (c) 2019
#
#-----------------------------------------------------------------------------

import logging
import os
import sys
import getopt
from turbogears import database
from turbogears.database import session
from ttl.tg.config import read_config
from sqlalchemy.sql import func
from sqlalchemy.sql import text
# initiale interface to tg to get at data model
read_config(os.getcwd(), None, None)
# connect to database
database.bind_meta_data()

from prcommon.model import ResearchProjects, ResearchProjectItems
import prcommon.Constants as Constants

LOGGER = logging.getLogger("prcommon.model")
NEW_PROJECT = 315
OLD_PROJECT = 312

FIRST_EMAIL_SEND = 2
CUSTOMER_COMPLETED = 3
PHONE3 = 11

LAST_ACTION_DATE = '2019-02-11'

def _run():
	""" run the application """

	newitems = session.query(ResearchProjectItems).\
	    filter(ResearchProjectItems.researchprojectid == NEW_PROJECT).all()

	newitemslist = [x.outletid for x in newitems]

	itemslistfromExcel = [103587,106697,107465,106901,104892,105475,107581,106198,106776,106181,103810,108175,107179,107772,105461,105070,104523,103904,105088,106665,106790,107678,107865,104522,107070,107707,108725,106669,106030,104058,105686,105976,106730,106718,104596,106715,103534,105568,104591,106922,103831,106461,105986,104328,104960,103962,105832,105299,103296,103784,103928,105998,103157,106108,106011,104411,107030,107090,105087,106839,103269,103943,104650,105007,105015,105303,108616,107445,105510,105306,104225,108380,103807,104309,105925,108051,105557,106900,103659,105254,104518,108173,103137,105081,106587,103251,105253,105101,103497,108656,103801,107962,103813,106883,107205,106591,103712,106070,103944,103575,105264,108410,104276,103874,107063,105903,104409,103187,105484,105600,106306,106060,104472,105882,107386,103206,104889,103477,108072,106265,108198,108338,104088,103910,107088,107834,104805,104289,108195,107478,108570,107998,104129,104858,105079,107541,103968,106763,103470,106111,105991,106109,106394,105099,105022,103629,104996,104228,106278,108154,105872,106621,104706,105699,104130,103464,103863,103391,105096,103581,106828,103884,106634,106856,106765,103958,105527,103428,104333,107473,106037,104060,107027,108742,107041,108310,106554,107457,103216,104625,105675,105371,108243,108036,104184,105031,106081,104191,103163,106993,107459,106231,107676,107481,103775,104665,104854,108503,107526,105698,107263,106480,107917,104666,106083,103135,105877,103229,104010,107464,104962,104136,104766,103210,105472,104899,105960,104768,107756,106317,108671,103989,103632,103366,105047,106122,103700,104682,103431,105889,103773,106056,105785,106004,104652,107682,103955,104717,108507,107402,106523,107458,106714,104695,107248,106720,103577,104505,107959,108730,104931,104853,104375,107193,104804,106597,107253,104466,105214,104473,105143,106680,104883,105366,104482,105042,104966,104950,105158,108426,103992,104250,106212,107800,106921,105291,105317,108672,104567,108401,107059,106584,104181,104980,104387,107226,108473,107405,104875,104378,108206,106059,103794,105166,108567,107139,108651,105173,104838,108076,107298,103817,103314,106999,108709,104224,105602,103906,106121,103725,104580,107810,108482,107812,107359,107955,103354,104263,106671,108245,105913,105398,106749,104033,104081,104094,103606,104711,107851,108553,104508,104379,107391,104959,106626,104487,106653,105243,106830,103371,105389,104205,105542,107435,106564,103113,107241,106378,108655,105351,105458,106334,107856,103743,107888,104103,103219,106074,106211,106084,103834,103122,104071,107607,104120,105752,107446,108479,104069,107925,104540,106797,108152,103220,103607,106755,104756,103730,105608,108682,106602,107499,104688,108590,106881,103740,104511,103359,104689,104490,104662,105911,106929,106864,105016,107895,103766,105577,108110,107274,103501,108049,106988,106717,104740,104709,105497,107589,105408,105375,107672,105203,103748,105290,103145,106314,104841,105709,104999,107985,106550,107606,103599,108150,103750,105805,103248,104584,107393,105239,107089,103709,108369,105080,106333,108218,103561,103525,106544,103310,105528,103608,108595,106994,107636,104364,103976,108534,103770,107980,106003,103864,107320,104613,106266,105300,106905,108231,106984,106080,107749,104822,105390,105625,105413,104239,107047,108123,104944,104131,106923,107203,106019,107159,104535,103356,105360,103759,108192,107471,106645,105127,129400,121702,73520,73143]
	
	olditems = session.query(ResearchProjectItems).\
	    filter(ResearchProjectItems.researchprojectid == OLD_PROJECT).\
	    filter(ResearchProjectItems.outletid.in_(newitemslist)).all()
	
	for olditem in olditems:
		if olditem.researchprojectstatusid == CUSTOMER_COMPLETED:
			session.execute(text("UPDATE research.researchprojectitem set researchprojectstatusid = :phone3 "
		                         "WHERE researchprojectitemid = :old_researchprojectitemid"), {'phone3':PHONE3, 'old_researchprojectitemid':olditem.researchprojectitemid}, ResearchProjectItems)
				
	session.execute(text("UPDATE research.researchprojectitem set researchprojectstatusid = :firstemailsend WHERE researchprojectid = :newproject"), {'firstemailsend':FIRST_EMAIL_SEND, 'newproject':NEW_PROJECT}, ResearchProjectItems)
	session.execute(text("UPDATE research.researchprojectitem set lastationdate = :lastactiondate WHERE researchprojectid = :newproject"), {'lastactiondate':LAST_ACTION_DATE, 'newproject':NEW_PROJECT}, ResearchProjectItems)
		
		
	session.execute(text("UPDATE research.researchprojectitem set researchprojectstatusid = :customercompleted WHERE researchprojectitemid in :itemslist"), {'customercompleted':CUSTOMER_COMPLETED, 'itemslist':itemslist}, ResearchProjectItems)
	
	
	
	
if __name__ == '__main__':
	_run()
